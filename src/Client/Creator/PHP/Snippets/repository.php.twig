<?php

namespace Leankoala\ApiClient\Repository\Entity;

use Leankoala\ApiClient\Repository\Repository;

/**
 * This class was created by the LeanApiBundle.
 *
 * All changes made in this file will be overwritten by the next create run.
 *
 * @created {{ "now" | date ('Y-m-d') | raw }}
 */
class {{ className }} extends Repository {% if  interface is defined and interface %}implements {{ interface }}{% endif %} {

{% for endpoint in endpoints %}
{{ jsDocs[endpoint.name] | raw }}
  public function {{ endpoint.name }}({% for parameter in endpoint.pathParameters %}${{ parameter }}, {% endfor %}array $args = [])
  {
    $route = ['path' => '{{ endpoint.path | raw }}', 'method' => '{{ endpoint.method }}', 'version' =>  1];
    $argList = array_merge([{% for parameter in endpoint.pathParameters %}'{{parameter}}' => ${{ parameter }}{% if not loop.last %}, {% endif %}{% endfor %}], $args);
{% if endpoint.requiredRequestParameters | length > 0 %}
    $requiredArguments = [{% for parameter in endpoint.requiredRequestParameters %}'{{parameter}}'{% if not loop.last %}, {% endif %}{% endfor %}];
    $this->assertValidArguments($requiredArguments, $argList);
{% endif %}

{% if endpoint.forceAccessRefresh %}
    $result = $this->connection->send($route, $argList);
    $this->connection->refreshAccessToken(true);
    return $result;
{% else %}
    return $this->connection->send($route, $argList);
{% endif %}
  }

{% endfor %}
}
